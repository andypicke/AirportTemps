knitr::opts_chunk$set(echo = TRUE)
head(USAirportWeatherStations)
# Setup, load packages
rm(list=ls())
library(weatherData)
suppressPackageStartupMessages(library(lubridate))
library(ggplot2)
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(maps))
library(RColorBrewer)
library(magrittr)
library(leaflet)
head(USAirportWeatherStations)
# Years we will get data for
year_list=1980:2016
st_list <-USAirportWeatherStations$airportCode
# station KMMO 1993 doesn't work, skip
st_list <- st_list[-which(st_list=="KMMO")]
# Setup, load packages
rm(list=ls())
library(weatherData)
suppressPackageStartupMessages(library(lubridate))
library(ggplot2)
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(maps))
library(RColorBrewer)
library(magrittr)
library(leaflet)
knitr::opts_chunk$set(echo = TRUE)
# just plot all station locations
cont_us <- USAirportWeatherStations %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" & State!="VI" & State!="GU")
m <- leaflet() %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng=cont_us$Lon,lat=cont_us$Lat,popup=cont_us$Station,radius=2,fill=TRUE,color="grey")
m  # Print the map
knitr::opts_chunk$set(echo = TRUE)
library(broom)
i<-1
fname<-file.path( "~/AirportTemps/Data",paste0("
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
# Years we will get data for
year_list=1980:2016
st_list <-USAirportWeatherStations$airportCode
# station KMMO 1993 doesn't work, skip
st_list <- st_list[-which(st_list=="KMMO")]
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
file.exists(fname))
file.exists(fname)
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
fit1 <- lm(Mean.TemperatureF~dd,data=dat)
fit1
?broom
tidy(fit1)
knitr::opts_chunk$set(echo = TRUE)
fit1 <- lm(Mean.TemperatureF~dd,data=dat)
fit_tidy <- tidy(fit1)
#                summary(fit1)
temp_fits<-rbind(temp_fits,data.frame(airportCode=st_list[i],trend=fit_tidy$term[2],pval=fit_tidy$p.value[2]))
library(broom)
# save data frame with fit coeffs, p value etc.
temp_fits<-data.frame()
for (i in seq_along(st_list)) {
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
if (file.exists(fname)){
print(paste("Fitting to ",st_list[i]))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
fit1 <- lm(Mean.TemperatureF~dd,data=dat)
fit_tidy <- tidy(fit1)
#                summary(fit1)
temp_fits<-rbind(temp_fits,data.frame(airportCode=st_list[i],trend=fit_tidy$term[2],pval=fit_tidy$p.value[2]))
}else{
print(paste("combined file for station ", st_list[i], " doesn't exist, skipping"))
}
}
# save a csv file with the fit results
write.csv(temp_fits,file.path( "~/AirportTemps/Data","temp_fits.csv"))
temp_fits
head(temp_fits
)
View(temp_fits)
fit_tidy
fit_tidy$term
knitr::opts_chunk$set(echo = TRUE)
library(broom)
# save data frame with fit coeffs, p value etc.
temp_fits<-data.frame()
for (i in seq_along(st_list)) {
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
if (file.exists(fname)){
print(paste("Fitting to ",st_list[i]))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
fit1 <- lm(Mean.TemperatureF~dd,data=dat)
fit_tidy <- tidy(fit1)
#                summary(fit1)
temp_fits<-rbind(temp_fits,data.frame(airportCode=st_list[i],trend=fit_tidy$estimate[2],pval=fit_tidy$p.value[2]))
}else{
print(paste("combined file for station ", st_list[i], " doesn't exist, skipping"))
}
}
# save a csv file with the fit results
write.csv(temp_fits,file.path( "~/AirportTemps/Data","temp_fits.csv"))
head(temp_fits)
str(temp_fits)
knitr::opts_chunk$set(echo = TRUE)
temp_fits <- read.csv(file.path( "~/AirportTemps/Data","temp_fits.csv"))
# convert trend to deg/decade
temp_fits$trend <- temp_fits$trend*365*10
ig<-which(temp_fits$pval<0.05)
ib<-which(temp_fits$pval>0.05)
print(paste(length(ig)," fits have p-values that are significant(<0.05)"))
print(paste(length(ib)," fits have p-values that are not significant(>0.05)"))
hist(temp_fits$pval)
hist(temp_fits$pval,40)
boxplot(temp_fits$trend[ig],main="Temperature trends",ylab= "deg/decade")
ig
boxplot(temp_fits$trend[ig],main="Temperature trends",ylab= "deg/decade")
iout <- which(abs(temp_fits$trend)>5)
temp_fits[iout,]
datout <- load_combined(temp_fits$airportCode[iout])
# function to load combined 1980-2016 csv file for specified station
load_combined<-function(st_code){
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_code,"combined.csv"))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
dat
}
iout <- which(abs(temp_fits$trend)>5)
temp_fits[iout,]
datout <- load_combined(temp_fits$airportCode[iout])
g<-ggplot(datout,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
temp_fits <- temp_fits[-iout,]
id <- ig[550]
temp_fits[id,]
datgood <- load_combined(temp_fits$airportCode[id])
g<-ggplot(datgood,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
# Join to data frame with station info
results2 <- join(temp_fits[ig,],USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<-subset(results2,State!="AK" & State!="MP" & State!="PR" & State!="HI" )
# Take a look at the largest, smallest trends
sortdat<-arrange(results2,desc(trend))
head(sortdat)
tail(sortdat)
knitr::opts_chunk$set(echo = TRUE)
# Join to data frame with station info
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
results2 <- join(temp_fits_good,USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<-subset(results2,State!="AK" & State!="MP" & State!="PR" & State!="HI" )
# Take a look at the largest, smallest trends
sortdat<-arrange(results2,desc(trend))
head(sortdat)
tail(sortdat)
knitr::opts_chunk$set(echo = TRUE)
# Only keep stations with significant p-values
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
# Join to data frame with station info
results2 <- join(temp_fits_good,USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<- results2 %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" ) %>%
arrange(desc(trend))
# Take a look at the largest, smallest trends
#sortdat<-arrange(results2,desc(trend))
head(results2)
tail(results2)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
g<-ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)
g2<-g+geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") + guides(fill=FALSE)  # do this to leave off the color legend
g2 + geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) + scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") + labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
knitr::opts_chunk$set(echo = TRUE)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
knitr::opts_chunk$set(echo = TRUE)
head(USAirportWeatherStations)
# Years we will get data for
year_list=1980:2016
st_list <-USAirportWeatherStations$airportCode
# station KMMO 1993 doesn't work, skip
st_list <- st_list[-which(st_list=="KMMO")]
# just plot all station locations
cont_us <- USAirportWeatherStations %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" & State!="VI" & State!="GU")
m <- leaflet() %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng=cont_us$Lon,lat=cont_us$Lat,popup=cont_us$Station,radius=2,fill=TRUE,color="grey")
m  # Print the map
# function to load combined 1980-2016 csv file for specified station
load_combined<-function(st_code){
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_code,"combined.csv"))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
dat
}
temp_fits <- read.csv(file.path( "~/AirportTemps/Data","temp_fits.csv"))
# convert trend to deg/decade
temp_fits$trend <- temp_fits$trend*365*10
ig<-which(temp_fits$pval<0.05)
ib<-which(temp_fits$pval>0.05)
print(paste(length(ig)," fits have p-values that are significant(<0.05)"))
print(paste(length(ib)," fits have p-values that are not significant(>0.05)"))
boxplot(temp_fits$trend[ig],main="Temperature trends",ylab= "deg/decade")
iout <- which(abs(temp_fits$trend)>5)
temp_fits[iout,]
datout <- load_combined(temp_fits$airportCode[iout])
g<-ggplot(datout,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
temp_fits <- temp_fits[-iout,]
id <- ig[550]
temp_fits[id,]
datgood <- load_combined(temp_fits$airportCode[id])
g<-ggplot(datgood,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
# Only keep stations with significant p-values
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
# Join to data frame with station info
results2 <- join(temp_fits_good,USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<- results2 %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" ) %>%
arrange(desc(trend))
# Take a look at the largest, smallest trends
#sortdat<-arrange(results2,desc(trend))
head(results2)
tail(results2)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
knitr::opts_chunk$set(echo = TRUE)
# Only keep stations with significant p-values
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
# Join to data frame with station info
results2 <- inner_join(temp_fits_good,USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<- results2 %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" ) %>%
arrange(desc(trend))
# Take a look at the largest, smallest trends
#sortdat<-arrange(results2,desc(trend))
head(results2)
tail(results2)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
m
print(m)
?leaflet
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
knitr::opts_chunk$set(echo = TRUE)
library(htmlwidgets)
saveWidget(m,file="leaflet_map.html")
## Plot map with circles proportional to trend
usa <- map_data("usa")
# Only keep stations with significant p-values
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
knitr::opts_chunk$set(echo = TRUE)
# Setup, load packages
rm(list=ls())
library(weatherData)
suppressPackageStartupMessages(library(lubridate))
library(ggplot2)
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(maps))
library(RColorBrewer)
library(magrittr)
library(leaflet)
# Years we will get data for
year_list=1980:2016
st_list <-USAirportWeatherStations$airportCode
# station KMMO 1993 doesn't work, skip
st_list <- st_list[-which(st_list=="KMMO")]
# just plot all station locations
cont_us <- USAirportWeatherStations %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" & State!="VI" & State!="GU")
m <- leaflet() %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng=cont_us$Lon,lat=cont_us$Lat,popup=cont_us$Station,radius=2,fill=TRUE,color="grey")
m  # Print the map
library(broom)
# save data frame with fit coeffs, p value etc.
temp_fits<-data.frame()
for (i in seq_along(st_list)) {
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_list[i],"combined.csv"))
if (file.exists(fname)){
print(paste("Fitting to ",st_list[i]))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
fit1 <- lm(Mean.TemperatureF~dd,data=dat)
fit_tidy <- tidy(fit1)
#                summary(fit1)
temp_fits<-rbind(temp_fits,data_frame(airportCode=st_list[i],trend=fit_tidy$estimate[2],pval=fit_tidy$p.value[2]))
}else{
print(paste("combined file for station ", st_list[i], " doesn't exist, skipping"))
}
}
# save a csv file with the fit results
write.csv(temp_fits,file.path( "~/AirportTemps/Data","temp_fits.csv"))
# function to load combined 1980-2016 csv file for specified station
load_combined<-function(st_code){
fname<-file.path( "~/AirportTemps/Data",paste0("wea",st_code,"combined.csv"))
dat<- read.csv(fname)
dat$dd <- ymd(dat$dd)
dat
}
temp_fits <- read.csv(file.path( "~/AirportTemps/Data","temp_fits.csv"))
# convert trend to deg/decade
temp_fits$trend <- temp_fits$trend*365*10
temp_fits <- read.csv(file.path( "~/AirportTemps/Data","temp_fits.csv"))
# convert trend to deg/decade
temp_fits$trend <- temp_fits$trend*365*10
ig<-which(temp_fits$pval<0.05)
ib<-which(temp_fits$pval>0.05)
print(paste(length(ig)," fits have p-values that are significant(<0.05)"))
print(paste(length(ib)," fits have p-values that are not significant(>0.05)"))
boxplot(temp_fits$trend[ig],main="Temperature trends",ylab= "deg/decade")
iout <- which(abs(temp_fits$trend)>5)
temp_fits[iout,]
datout <- load_combined(temp_fits$airportCode[iout])
g<-ggplot(datout,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
temp_fits <- temp_fits[-iout,]
knitr::opts_chunk$set(echo = TRUE)
boxplot(temp_fits$trend[ig],main="Temperature trends",ylab= "deg/decade")
id <- ig[550]
temp_fits[id,]
datgood <- load_combined(temp_fits$airportCode[id])
g<-ggplot(datgood,aes(x=dd,y=Mean.TemperatureF))+geom_line()+geom_smooth(method="lm")
g
# Only keep stations with significant p-values
temp_fits_good <- temp_fits %>%
filter(pval<0.05)
# Join to data frame with station info
results2 <- inner_join(temp_fits_good,USAirportWeatherStations,by="airportCode")
# Keep only continental and lower 48 states (map doesn't look good with others)
results2<- results2 %>%
filter(State!="AK" & State!="MP" & State!="PR" & State!="HI" ) %>%
arrange(desc(trend))
# Take a look at the largest, smallest trends
#sortdat<-arrange(results2,desc(trend))
head(results2)
tail(results2)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
knitr::opts_chunk$set(echo = TRUE)
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# now try making same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
## Plot map with circles proportional to trend
usa <- map_data("usa")
states <- map_data("state")
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group), fill=NA, color="red") + coord_fixed(1.3)  +
geom_polygon(data=states,aes(x = long, y = lat, group = group), fill="slategray",color = "white") +
guides(fill=FALSE) +  # leave off the color legend
geom_point(data = results2, aes(x = Lon, y = Lat,size = abs(trend),color=trend)) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",high="red", space ="Lab" ,limits=c(-3.5,3.5)) +
ggtitle("Linear trend [deg/decade] in mean temp., 1980-2016") +
labs(x="Longitude",y="Latitude")
# Make the same map w/ leaflet
library(leaflet)
# make color palette. I want to use the diverging red-blue palette, but need to reverse it so blue is negative, red is positive
pal_blrd <- brewer.pal(10,"RdBu")
pal <- colorNumeric(palette=rev(pal_blrd),domain=c(-3.5,3.5))
# Also make an interactive leaflet map
m <- leaflet(data=results2) %>%
setMaxBounds(-125,23,-67,50)%>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(~Lon,~Lat,popup=paste(results2$Station,round(results2$trend,digits=2)),radius=~(4*trend),fill=TRUE,color=~pal(trend),fillColor=~pal(trend),fillOpacity = 2,opacity=2,weight=3)
m  # Print the map
knit_with_parameters('~/AirportTemps/AirportTemps.Rmd')
unlink('AirportTemps_cache', recursive = TRUE)
